/*CONCEPTOS

    selectores      -> nos dice que elementos html se van a ver afectados por los estilos
        selectores de etiqueta  o tipo    ->usan la etiqueta html del elemento
    selectores descendientes              ->son selectores separados por un espacio
                                          el primero es el padre y el segundo es un hijo(o descendiente de cualquier nivel)
                                          evitar usar el selector descendiende por la especificidad
    especificidad   ->
    cascada
    herencia

CONCEPTOS AVANZADOS
    box model
    position
    flexbox

 */
/*este es un selector de etiqueta*/
/*h1{*/
/*    background:         black;*/
/*    font-size:          50px;*/
/*    font-family:        sans-serif;*/
/*    text-decoration:    underline;*/
/*    color: white;*/
/*}*/
/*este es un selector descendiente padre hijo nieto
  evitar usar el selector descendiende por la especificidad
body h1 span{ -> esta mal ya que no hay necesidad de usar el body ya todos los elementos son hijos de body
    color: red;
}
*/

/*hace referencia a los hijos del h1 o los que se encuentran mas abajo*/
/*h1:nth-child(2){*/
/*    color: red;*/
/*}*/
/*h1:nth-child(3){*/
/*    color: yellow;*/
/*}*/
/*
se llama bloque de declaracion
selector {
    propiedad: valor o keyword;
}
 */
/* todo TIPOS DE DATOS

    header span {
        transition: left 2s;animacion que va durar 2 s
        transform: rotate(10deg);voy a rotar 10 grados
        transform: rotate(2turn);oy a rotar 2 vueltas
        hacer calculos existen funciones y operaciones
        margin: calc(10px*2);
        content: "hola mundo";reconoce string
    }
    h1 { podemos redefinir una variable
    --color: green;
    background: var(--color);
    }
    span {no hay necesidad de esta declaracion ya que segun el html este ya hereda el bcakground
        background: var(--color);
    }
    p {
        background: var(--color);
    }
    body {una vez apliquemos este background este se le definira a todos sus hijos el scope es por padre e hijos
        --color: red; creacion de variable
        background: var(--color);
    }
*/


/*
todo ESTILO DE TEXTO

cuando escribimos codigo debemos usar las letras monospace ya que todas tienen el mismo grosor
y no va a ver problemas de alineacion
los otros tipo de letra no tiene el mismo grosor ej sans serif
 */
/*
h1 {
    color: lime;color letra
    font-size: 25px;tamano de la letra
    font-family: sans-serif;tipo de letra
    font-family: monospace;tipo de letra
    font-family: Arial, sans-serif;significa que si la fuente no esta se usa el siguiente tipo
    font-family: 'Bangers', cursive;letra traida de google
    line-height: 0;espacio entre texto o interlineado

}
*/
/*todo ESTILOS POR DEFECTO DEL NAVEGADOR
h1 {
    font-weight: normal;quita la negrita por defecto
}
body{
    margin: 0;quita el margin por defecto del navegador
}
ul {
    margin: 0;
    padding: 0;
}
descargamos la libreria que reestablece lo estilos por defecto del navegador llama normalize
*/


/******* todo SELECTORES SIMPLES
    - selector de etiqueta
    - selector de id
    - selector de clase

selectores de tipo o etiqueta html no usar salvo los estilos base
li {
    backgroun:yellow;
}
selectores de id
#nombreid {
}
 */
/* .fulano:nth-of-type(2){/*escogemos un elemento en especifico
    background: red;
} */

/***************************************|
|          SELECTORES COMPUESTOS        |                                       
****************************************/
/* selectores descendientes -> son separados por un espacio
padre hijo {
    estilos
}
ancestro descendiente {
    estilos
}
*/
/* ul span {
    background: red;
} */

/*hijos directos (>)  */
/* ul > span {
    background: green;
} */
/* selector hermano siguiente ->  sele anade solo al primer hermanos siguiente (+)  */
/* h1 + p {
    background: lime;
} */
/*selectors hermanos siguientes -> plural   (~)  */
/* h1 ~ p {
    background: pink;
} */
/* combinar selectores (sin espacio)*/
/* h1.first {
    color: blue;
}
.titel.first{
    color: olive;
} */
/* h1#first {con id
    color: blue;
} */

/***************************************|
|          SELECTORES DE ATRIBUTOS      |                                       
****************************************/
/* .class #id
usan corchetes [] para indicar el atibuto*/

/* [href]{
    color: red;
    font-size: 2em;
}
[href = "https://escuela.digital"]{
    color: green;
    font-size: 2em;
}
[title][href]{
    color: blue;
    font-size: 3em;
} */
/*otraforma*/
/* a[title]{
    color: blue;
    font-size: 3em;
} */

/*COMODIN ^ (COMIENZA CON)*/

/* [title^='soy'] {
    background: yellow;
}
[class^="menu-"]{
    background: yellow;
} */
/* COMODIN $ (TERMINA EN O TERMINA CON)*/
/* [href$='pdf']{
    display: block;
    background: 
    url(https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/PDF_file_icon.svg/98px-PDF_file_icon.svg.png) left / contain no-repeat;
    padding-left: 1.5em;
} */

/*COMODIN * (contiene) i = case insensitive*/
/* [href*='sea' i]{
    color: green;
} */

/***************************************|
|          PSEUDOCLASES                 |                                       
****************************************/
/*
se le pueden implementar a cualquier elemento
*/
/* a {
    display: inline-block;
    background: red;
    color: #fff;
    line-height: 2.5;
    padding: 0 1em;
    text-decoration: none;
} */

/* a:hover {
    background: darkred;
    text-decoration: underline;
} */
/*coloca el boton mas pequeno al hacer click*/
/* a:active {
    transform: scale(0.9);
} */
/* cuando un link ya ha sido visitado*/
/* a:visited {

} */

/* :hover {
    background: darkred;
    text-decoration: underline;
} */

/*como tiene un espacio es un descendiente y se le aplica el hover a todos los hijos*/
/* body :hover {
    background: darkred;
    text-decoration: underline;
} */
/* #parrafo {
    margin-top: 50em;
    margin-bottom: 50em;

}
nav {
    background: #222;
    position: fixed;
    width: 100%;
    height: 50px;
    top: 0;
}
a {
    color: #fff;
    display: block;
    text-align: center;
    line-height: 50px;
    text-decoration: none;
} */
/*cuando ocurre una accion */
/* #parrafo:target {
    padding-top: 80px;
} */

/* es la raiz de todo no body si no html*/
/* :root {
    background: red;
} */

/*te indica elementos vacios*/
/* :empty {
    
} */
/* p {
    background: yellow;
    padding: .5em;
}
p:empty {
    display: none;
} */
/* :not(selector)si se cumple la condicion no entra recibe cualquier cosa menos otro :not*/
/* p:not(:empty) {
    background: lime;
} */

/***************************************|
|      PSEUDOCLASES EN FORMULARIOS      |                                       
****************************************/

/* cuando tenemos el foco de un input*/
/* input:focus {
    background: yellow;
} */

/*:enabled :disabled*/
/*pordefecto todos los form estan enabled*/
/* input:enabled {
    background: red;
} */

/* input:disabled {
    background: grey;
} */

/* :checked */
/* .elegir:checked + label {
    font-size: 2em;
    background: yellow;
    color: red;
} */

/* :required :optional*/

/* input:optional {
    border: 1px solid green;
}
input:required {
    border: 1px solid red;
} */
/*esta le asigna a todos los form con input required o optional*/
/*aqui usamos un selector descendiente por el espacio */
/*estamos diciendo form que tenga hijos con optional o required les asigna el style*/
/* form :optional {
    border: 1px solid green;
}
form :required {
    border: 1px solid red;
} */

/* :valid  :invalid */
/* input:valid {
    background: yellow;
}
input:invalid {
    background: red;
} */

/* :in-range :out-of-range*/
/* input:in-range {
    background: darkblue;
}
input:out-of-range{
    background: darkorchid;
} */

/***************************************|
|      PSEUDOCLASES child               |                                       
****************************************/

/* p:first-child {
    background: yellow;
}
p:last-child {
    background: pink;
} */
/*p:nth-child(even) -> los pares 
  p:nth-child(odd) -> impares
  p:nth-child(number) -> numero de hijo
  p:nth-child(3n) -> cuenta de tres en tres o multiplos de tres
  p:nth-child(3n + 1) -> es una operacion ej: 3(0)+1=1, 3(1)+1=4, 3(2)+1=7 etc..
*/
/* p:nth-child(3n){
    background: blue;
    color: #fff;
} */

/*cuenta de abajo hacia arriba*/
/* p:nth-last-child(3n){
    background: blue;
    color: #fff;
} */

/*se aplica a elemento solo con un hijo */
/* p:only-child {
    background: salmon;
} */
/*nth-child -> cuenta los hijos ya sea de div o p o culaquier otro elemento */ 
/* p:nth-child(3) {
     background: sandybrown;
 } */

/***************************************|
|          PSEUDOCLASES TYPE            |                                       
****************************************/

/* son iguales a las child()
:first-child        :first-of-type
:last-child         :last-of-type
:nth-child()        :nth-of-type()
:nth-last-child()   :nth-last-of-type() */
/*la diferecia con child es que este cuenta los hijos dependiendo del tipo en este ejemplo los de tipo p*/

/* p:nth-of-type(3) {
    background: teal;
} */
/* .parrafo:nth-of-type(3) {
    background: teal;
} */

/***************************************|
|          SELECTORES AGRUPADOS         |                                       
****************************************/

/*se separan por comas */
/* h1, p {
    background: firebrick;
} */

.titulo, .agrupados {
    text-decoration: underline;
}
.titulo {
    color: tomato;
}
.agrupados {
    color: blue;
}

/***************************************|
|          BOX MODEL                    |                                       
****************************************/
/*ELEMENTOS INLINE Y BLOCK*/
/*EN HTML TODO SLOS ELEMENTOS SON RECTANGULOS */
/*todo lo que se ve en pantalla se llama viewport */
h1 {
    background: red;
    height: 100px;
    width: 500px;
}
/*los estilos width y height no funcionan en elemento inline
solo funcionan con la linea:
display: block; -> lo convierte a block
display: inline-block; -> se usa mucho para botones
*/
a {
    background: yellow;
    padding: 10px;
    margin: 20px;
    height: 100px;
    width: 500px;
}


