/*************POSITION FIXED****************/
/*
1. pierde su espacio en el flujo
2. su contexto es el viewport siempre
3. sus dimensiones se ajustan al contenido (salvo que se le especifiquen)
4. se queda fijo en el viewport sin moverse con el scroll
*/

/* .main-header {
    background-color: hsl(210, 70%, 50%);
    color: #eee;
    padding: 1em;
    text-align: center;
    position: fixed;
    top: 0;
    width: 100%;
}
body {
    padding-top: 50px;/*para que el position fixedf no tape el parrafo 
    margin-bottom: 1000px;
} */
/**************EJERCICIO POSITION FIXED*********************/

/* .main-nav {
    position: fixed;
    top: 0;
    left: 0;
    background-color: #ddd;
    width: 25%;
    height: 100%;
    overflow: auto;
}
.main-menu {
    list-style: none;
    margin-top: 0;
    margin-bottom: -0;
    padding-left: 0;
}
.menu-item {
    border-bottom: solid 1px #bbb;
}
.menu-link {
    display: block;
    line-height: 3;
    text-decoration: none;
    color: #222;
    padding-left: 1em;
}
.main {
    margin-left: 27%;
} */
/*end ejercicio*/

/**************Z-INDEX*********************/
/* .capa {
    width: 200px;
    height: 200px;
    opacity: .7; 
    font-size: 3em;
    text-align: center;
    line-height: 200px;
    color: #fff;
    position: relative;
}
.uno {
    background-color: hsl(120, 70%, 50%);
    left: 200px;
    z-index: 100;/**no usar numeros correlativos ejemplo:1,2,3   
}
.uno::before {
    content: '';
    display: block;
    width: 150px;
    height: 150px;
    background: hsl(30, 80%, 50%);
    position: absolute;
    top: 100px;
    left: 100px;
    /*z-index: -100;/*cuando usamos seudo elementos tenemos que quitarle el zindex del padre para que funcione  
}
.dos {
    background-color: hsl(200, 70%, 50%);
    left: 100px;
    bottom: 100px;
    z-index: 200;
    /* display: none;  
}
.tres {
    background-color: hsl(300, 70%, 50%);
    bottom: 200px;
    z-index: 300;
    /* display: none;  
} */

/******************* STICKY ******************/
/*1. es una combinadion entre relative y fixed
  2. funciona con contenido
*/

/* body {
    text-align: center;
    padding-bottom: 150em;
}
 nav {
     width: 100%;
     padding: 1em;
     background: hsl(190, 80%, 50%);
     color: #fff;
     position: sticky;
     top: 50px;
 } */

/******************* FLEX-BOX ******************/
/* flexbox requiere de un elemento padre y al menos un hijo.

padre -> flex-container
hijo directo -> flex-item

padre {
    display: flex | inline-flex; /*crea un contexto flex para sus hijos
}
los hijos (flex-item) son las cajas flexibles
flex-items pueden ser:
    - elementos hijos directos del flex-container
    - pseudo elementos ::before y ::after
    - el texto
*/
/* .container {
    display: flex;
    width: 500px;
    height: 500px;
    background: hsl(240, 100%, 90%);
    /* justify-content: space-between; */
    /* justify-content: space-around; */
    /* flex-direction: column; para cambiar la orientacion */
    /* flex-direction: row-reverse; */
    /* align-items: center; */
    /* align-items: flex-end; 


} */
/* .item {
    /* align-self: flex-start; */
    /* order: -1;
} */

/******************* MAIN-AXIS Y CROSS-AXIS ******************/

/* .container {
    display: flex;
    width: 500px;
    height: 500px;
    background: hsl(240, 100%, 90%);
    /*flex-direction: row-reverse;cambia el main axis de izq a der*/
    /*flex-direction: column;cambia el main axis a vertical*/
    /* flex-wrap: nowrap;no salta de linea el flex */
    /* flex-wrap: wrap;salta de linea */
    /* flex-wrap: wrap-reverse; ha estas dos lineas las puede reemplazar el flex-flow
    flex-direction: row-reverse; */
    /* flex-flow: row-reverse wrap-reverse; */
    /*********alinecion de eje main axis ******/
    /* flex-direction: row-reverse; */
    /*justify-content: flex-start;/*la posicion de esta propiedad sirve para mover el contenido pero dependiendo del sentido el flex direction*/
    /* justify-content: space-between;/* esta propiedad no deja el margen y deja un espacio entrelos elementos */
    /* justify-content: space-around;/*esta propiedad deja un margen en los hijos */
    /********* ALINECION DE EJE SECUNDARIO**********/
    /* align items -> se usa cuando es una sola linea */
    /*align-content -> cuando son varias lineas*/
    /* flex-direction: column; */
    /*align-items: stretch;/*el height del los items depende del height declarados a ellos*/
    /*align-items: baseline;/* se alinean deacuerdo a cada elemento*/
    /*align-items: flex-end;/*manda contenido al final
    flex-wrap: wrap;
    /* align-content: center; 

} */
/* .item {
    width: 30px;
    /* height: 30px; 
    background-color: yellow;
    text-align: center;
    line-height: 30px;
    /* margin: 10px; 
} */
/* .item:nth-child(even){
    background-color: green;
    color: white;
} */
/* .item:nth-child(10){
    font-size: 50px;
} */
/***********sentencias que sele aplican a los hijos de flexbox*********************/
/*los elementos en el dom todos tienen order cero*/
/* .item:nth-child(n+23){
    order: 2;
}
.item:nth-child(50){
    order: 1;
} */
/* .item:nth-child(10) {
    align-self: stretch;

} */

/******************* CAJAS FLEXIBLES ******************/
/*
flexbox tiene su propia manera para definir las dimensiones de sus cajas
flex-basis: main-size inicial
flex-grow: factor de crecimiento
flex-shrink: factor de encogimiento
flex: grow shrink basis reemplaza las otras propiedades
*/
/* .container {
    display: flex;
    width: 500px;
    height: 500px;
    background-color: hsl(240, 100%, 90%);
}
.item {
    flex:1 0 auto;
    /*flex: 0 1 200px;/* esta reemplaza las otras  propiedades*/ 
    /*flex-basis: 100px;/*el flex-basis le gana a el width
    width: 100px;/*este width no lo respeta flexbox ya que no se puede dar por el width del padre */
    /*flex-grow: 1;/*tome el espacio disponible y dividalo por la cantidad de elementos hijos y los agranda*/
    /* height: 30px; 
    background-color: yellow;
    text-align: center;
}
.item:nth-child(even){
    background-color: green;
    color: white;
}
.item:nth-child(3){
    /* flex-grow: 4; 
    flex-shrink: 4;/*toma el espacio negativo es decir que se pase del container y reduce en este caso el hijo 3
} */


/**************************LAYOUT PERFECTO *********************************/
/* 
.header {
    background-color: hsl(120, 50%, 50%);
    width: 100%;
    padding: 2em;
    /* color: red; 
}
.first {
    background-color: hsl(60, 80%, 50%);
}
.main {
    background-color: hsl(300, 50%, 50%);
    flex: 0 0 50%;
}
.content {
    display: flex;
    flex: auto;
}
aside {
    flex: 0 0 25%;
}

.second {
    background-color: hsl(200, 90%, 50%);
}
.footer {
    background-color: hsl(180, 50%, 50%);
    width: 100%;
    padding: 2em;

}

body {
    min-height: 100vh;/*decirleque vas a medir lo mismo que el viewport high para que el body no crezca con el contenido
    display: flex;
    flex-direction: column;

    /* flex-wrap: wrap; 
} */
/*****************MENU CON FLEXBOX***************************/
/* .menu {
    margin-top: 0;
    margin-bottom: 0;
    padding-left: 0;
    list-style: none;
    display: flex;
    background: #333;
}
a {
    color: #fff;
    text-decoration: none;
    display: block;
    text-align: center;
    padding: .5em;
    white-space: nowrap;
}
li {
    position: relative;
    list-style: none;
}
li:hover > ul {
    display: block;
}
li > ul {
    position: absolute;
    display: none;
    background: #333;
    text-align: center;
    width: 100%;
    padding-left: 0;
}
li ul ul {
    left: 100%;
    top: 0;
}
.menu__item {
    flex: auto;
} */
/*************BANNER ANIMADO ***************************/
/* * {
    box-sizing: border-box;
}
.banner {
    display: flex;
    width: 80%;
    margin-left: auto;
    margin-right: auto;
    height: 250px;
}
.item {
    display: flex;
    flex: 1 1 50px;
    
}
.item span {
    margin: auto;
    transform: rotate(-90deg);
    transition: all .3s;
}
.item:first-child {
    background: hsl(40, 80%, 50%);
}
.item:nth-child(2) {
    background: hsl(80, 80%, 50%);
}
.item:nth-child(3) {
    background: hsl(150, 80%, 50%);
}
.item:nth-child(4) {
    background: hsl(210, 80%, 50%);
}

.item:hover {
    flex: 10 0 auto;
    transition: all .3s;
}
.item:hover span{
    transform: none;
} */
/***************DISPLAY TABLE **************************/
/*un uso de display table es para que el elemento se adapte al contenido*/
/*sirve para limpiar float es decir este contiene los floats
existen tambien :
    display: table-row;-> pra que se comporte como una fila
    display:table-cell; -> para que se comporte como una celda 
*/
/* .table {
    background-color: yellow;
    /* display: block; 
    display: table;
    padding: 1rem;
    width: 50%;
    margin-right: auto;
    margin-left: auto;
}
h2 {
    float: left;
}
a {
    float: right;
} */

/***************CSS EN TABLAS HTML **************************/
/* * {
    box-sizing: border-box;
}
.table-container {
    overflow: auto;/*para que aparezca el scroll si es necesario
}
table {
    margin: 2em auto;
    padding: .5em;
    border-collapse: collapse;/*sirve para quitar el doble margen en las tablas html*/
    /*border-spacing: 10px;/*este es para dar una separacion a los margenes de las tablas html
    table-layout: fixed;/*para que todas las columnas tengan el mismo anchopero hay que darle un width
    width: 75%;/*este es el width de table-layout
    min-width: 450px;/*para que no se desmaquete a la hora de mover su ancho el ancho minimo es este

}
/*en los tr no funcionan las prppiedades
tr {
    border: 1px solid green;
    padding: .5em;
}
tr:nth-child(even) {
    background-color: #eee;
}
td {
    border: 1px solid #ccc;
    padding: .3em;
    /*margin: 10px;/*los margin no funcionan en tablas html es otro tipo de layout
}
th {
    background-color: teal;
    color: #fff;
    padding: .5em;
    border-right: 1px solid rgba(255, 255, 255, .5);
}

th:last-child {
    border-right: none;
} */

/***************COLORES **************************/
/* shortcut es background
666,fff,333, etc -> son colores neutros*/
/* body {

    background-color: #59a;
} */
/***************RGB **************************/
/*colores de 0 -255*/
/* body {
    /* background-color: rgb(255, 0, 0); 
    background-color: rgba(255, 0, 0,0.5);/*RedGreenBlueAlfa es transparencia */
    /*background-color: lime;/*este verde es el mismo color de la paleta rgb
} */

/*************** HSL **************************/
/*
hue = angulo            escala de grados del color en hsl
saturation =saturacion intensidad del color
lightness = luz         brillo
*/
/* body {

    /* background-color: hsl(350, 100%, 50%); */
    /* background-color: hsla(350, 100%, 50%, 0.5); 
}
button {
    background: hsl(200, 85%, 50%);
    border: none;
    color: white;
    padding: .5em 1em;
}
button:hover {
    background: hsl(200, 85%, 45%);
} */

/*************** DEGRADADO **************************/

/*****DEGRADADO LINEAL****/
/* 
body {
    background-image: linear-gradient(red, yellow, green);
    height: 100vh;/*necesito indicarle un area
} */
/*
porcentaje de rojo puro
porcentaje de amarillo puro
*/
/* body {
    background-image: linear-gradient(red 10%, yellow 30%, green 45%);
    height: 100vh;
} */

/***plantilla block de notas*****/
/* body {
    background-image: linear-gradient(
        hsl(60, 100%, 85%) 98%, 
        hsl(0, 60%, 45%) 98%
        );
    height: 100vh;
    background-size: 50px;
} */
/*****degradado como efecto de filtro***/
/* body {
    height: 100vh;
    background: url(https://www.sortiraparis.com/images/80/1467/534046-visuel-paris-tour-eiffel-2.jpg) center/cover;
    position: relative;
}
body::before {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(
        45deg,
        hsl(60, 100%, 50%), 
        hsl(0, 100%, 60%)
        );
    opacity: .3;
} */
/*****degradado en circulo***/
/* body {
    height: 100vh;
    
    background-image: radial-gradient(
        circle at 20px 50px,/*algunas variaciones circle | 50% 10% ellipse | circle at 0 0 | circle at 20px 50px
        hsl(60, 100%, 50%) 50%, 
        hsl(0, 100%, 50%) 50%
        );
} */

/**************************FLEX GRID *********************************/
/*
NECESITAMOS UN PAPAA Y UNOS HIJOS
*/
/*
1fr -> es un fraccion de crecimiento
*/
/* .grid-container {
    display: grid;
    /* grid-template-columns: 200px 300px 1fr; */
    /*grid-template-columns: 1fr 1fr 1fr;/*todas las colimnas de la misma fraccion
    grid-template-columns: repeat(3,1fr);/*igual a 1fr 1fr 1fr
    grid-template-rows: 100px 300px 50px 60px;
    grid-gap: 5px;/*es el gutter es la separacion entre columnas y filas
}
.grid-item {
    background: hsl(230, 100%, 50%);
    color: #fff;
}
.grid-item:nth-child(even){
    background: hsl(180, 100%, 30%);
} */
/* .grid-item:nth-child(1) {
    /* grid-column-start: 1;/*toma en cuenta la grid lines
    grid-column-end: 4;
    grid-row-start: 2;
    grid-row-end: 4; */

    /*estas lineas reemplazana las sentencias grid-column-end y grid column-start*/
    /*grid-column: 1 / 4;
    grid-row: 2 / 3;/*empiece en columna 1 y termine en 4 
    grid-column:2 / span 2 ;/*span significa que ocupe dos lineas
    
} */
/************************** LAYOUT PERFECTO CON GRID *********************************/

/* header {
    background: hsl(140, 80%, 50%);
    grid-area: header; 
}
footer {
    background: hsl(30, 80%, 50%);
    
}
aside {
    background: hsl(170, 80%, 50%);
} */
/* main {
    background: hsl(60, 80%, 50%);
    /* grid-column: 2; 
    grid-area: main;
}
.page {
    min-height: 100vh;
    display: grid;
    grid-template-columns: 20% 60% 20% ;
    grid-template-rows: 100px 1fr 100px;
    /*con grid areas
    grid-template-areas: "header header header" 
                         "aside1 main aside2"
                         "footer footer footer";
    grid-gap: 10px;
    width: calc(100% - 20px);/*arreglo para el scrull
} */
/* header, footer {
    grid-column: 1/ span 4;
} */
/* footer {
    grid-area: footer;
    /* grid-row: 3; 
}
aside:first-of-type {
    grid-area: aside1;
    /* grid-column: 1;
    grid-row: 2; 
} */

/************************** TRANSFORMACIONES *********************************/
/*
    cuando usamos el transform el eje de coodenadas cambia deja de ser la esquina superior izquierda y 
    se vuelve el centro del elemento
     ** el orden de las transformaciones importan ya que las coordenadas cambian
*/
* {
    box-sizing: border-box;
}
:root {
    --size: 300px;
}
.container {
    width: var(--size);
    height: var(--size);
    border: 1px solid black;
    margin: auto;
}
.box {
    background: linear-gradient(
        transparent 149px,
        red 149px,
        red 150px,
        transparent 150px
    ),
      linear-gradient(
        to left,
        transparent 149px,
        lime 149px,
        lime 150px,
        transparent 150px
      );
    border: 1px solid red;
    width: var(--size);
    height: var(--size);
    opacity: .8;
    transform: translateX(200px) rotate(50deg)  scaleY(2);
    /* margin-left: 150px; */
}

